---
interface Author {
    name: string;
    isPI?: boolean;
}

interface Props {
    title: string;
    authors: Author[];
    journal: string;
    year: number;
    publishedDate?: Date;
    volume?: string;
    pages?: string;
    type?: 'journal' | 'conference' | 'preprint';
    links?: {
        doi?: string;
        code?: string;
        projectPage?: string;
    }
    abstract?: string;
    keywords?: string[];
    googleScholar?: {
        url: string;
        citations: number;
        lastUpdated: string;
    };
}

const { title, authors, journal, year, publishedDate, volume, pages, type = 'journal', links, abstract, keywords, googleScholar } = Astro.props;

// 格式化引用
function formatCitation() {
    const authorString = authors.map(author => author.name).join(', ');
    let citation = `${authorString} (${year}). "${title}". ${journal}`;
    
    if (volume) {
        citation += `, ${volume}`;
    }
    if (pages) {
        citation += `, ${pages}`;
    }
    citation += '.';
    
    return citation;
}

// 获取类型标签样式
function getTypeStyle(type: string) {
    const styles = {
        journal: 'bg-blue-100 text-blue-800',
        conference: 'bg-green-100 text-green-800',
        preprint: 'bg-orange-100 text-orange-800'
    };
    return styles[type as keyof typeof styles] || styles.journal;
}
---

<article class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6 hover:shadow-md transition-shadow">
    <!-- Publication Type Badge and Citations -->
    <div class="flex items-start justify-between mb-3">
        <div class="flex items-center gap-3">
            <span class={`inline-block px-2 py-1 text-xs font-medium rounded-full ${getTypeStyle(type)}`}>
                {type.charAt(0).toUpperCase() + type.slice(1)}
            </span>
            {googleScholar && googleScholar.citations > 0 && (
                <span class="inline-flex items-center px-2 py-1 text-xs bg-orange-100 text-orange-800 rounded-full font-medium">
                    <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M5.242 13.769L0.5 9.5 12 1l11.5 8.5-4.742 4.269C17.548 11.249 14.978 9.5 12 9.5c-2.977 0-5.548 1.748-6.758 4.269zM12 10a7 7 0 1 0 0 14 7 7 0 0 0 0-14z"/>
                    </svg>
                    {googleScholar.citations} citations
                </span>
            )}
        </div>
        <div class="text-sm text-gray-500 font-medium">
            {publishedDate ? (
                <div>
                    <div>{year}</div>
                    <div class="text-xs text-gray-400">
                        Published: {new Date(publishedDate).toLocaleDateString('en-US', { 
                            year: 'numeric', 
                            month: 'short', 
                            day: 'numeric' 
                        })}
                    </div>
                </div>
            ) : (
                <div>{year}</div>
            )}
        </div>
    </div>
    
    <!-- Title -->
    <h3 class="text-xl font-serif font-bold text-primary mb-3 leading-tight">
        {title}
    </h3>
    
    <!-- Authors -->
    <p class="text-gray-700 mb-3">
        {authors.map((author, index) => (
            <span class={author.isPI ? 'font-bold text-primary' : ''}>
                {author.name}{index < authors.length - 1 ? ', ' : ''}
            </span>
        ))}
    </p>
    
    <!-- Journal/Venue -->
    <p class="text-gray-600 italic mb-4">
        {journal}
        {volume && ` ${volume}`}
        {pages && `, ${pages}`}
    </p>
    
    <!-- Abstract (if provided) -->
    {abstract && (
        <details class="mb-4">
            <summary class="cursor-pointer text-primary hover:text-blue-800 font-medium mb-2">
                Show Abstract
            </summary>
            <p class="text-gray-700 text-sm leading-relaxed pl-4 border-l-2 border-gray-200">
                {abstract}
            </p>
        </details>
    )}
    
    <!-- Keywords -->
    {keywords && keywords.length > 0 && (
        <div class="mb-4">
            <div class="flex flex-wrap gap-2">
                {keywords.map(keyword => (
                    <span class="inline-block px-2 py-1 text-xs bg-gray-100 text-gray-700 rounded-full">
                        {keyword}
                    </span>
                ))}
            </div>
        </div>
    )}
    
    <!-- Links -->
    <div class="flex flex-wrap gap-3">
        {googleScholar && (
            <a 
                href={googleScholar.url} 
                target="_blank" 
                class="inline-flex items-center px-3 py-1 bg-orange-100 text-orange-800 rounded-lg hover:bg-orange-200 transition-colors text-sm font-medium"
                title={`Last updated: ${new Date(googleScholar.lastUpdated).toLocaleDateString()}`}
            >
                <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M5.242 13.769L0.5 9.5 12 1l11.5 8.5-4.742 4.269C17.548 11.249 14.978 9.5 12 9.5c-2.977 0-5.548 1.748-6.758 4.269zM12 10a7 7 0 1 0 0 14 7 7 0 0 0 0-14z"/>
                </svg>
                Google Scholar
            </a>
        )}
        
        {links?.doi && (
            <a 
                href={`https://doi.org/${links.doi}`} 
                target="_blank" 
                class="inline-flex items-center px-3 py-1 bg-blue-100 text-blue-800 rounded-lg hover:bg-blue-200 transition-colors text-sm font-medium"
            >
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
                DOI
            </a>
        )}
        
        {links?.code && (
            <a 
                href={links.code} 
                target="_blank" 
                class="inline-flex items-center px-3 py-1 bg-green-100 text-green-800 rounded-lg hover:bg-green-200 transition-colors text-sm font-medium"
            >
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
                </svg>
                Code
            </a>
        )}
        
        {links?.projectPage && (
            <a 
                href={links.projectPage} 
                target="_blank" 
                class="inline-flex items-center px-3 py-1 bg-purple-100 text-purple-800 rounded-lg hover:bg-purple-200 transition-colors text-sm font-medium"
            >
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9"></path>
                </svg>
                Project
            </a>
        )}
    </div>
</article>